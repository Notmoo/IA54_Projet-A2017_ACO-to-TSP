package com.utbm.ia54.aco.Agent

import io.sarl.core.Destroy
import io.sarl.core.Initialize
import io.sarl.core.Behaviors
import com.utbm.ia54.aco.SimpleTSPEnvironment
import com.utbm.ia54.aco.ChangeTspVersion
import com.utbm.ia54.aco.TWTSPEnvironment
import parser.FileParser
import com.utbm.ia54.aco.NewEnvironment
import io.sarl.core.DefaultContextInteractions
import com.utbm.ia54.aco.NewTWEnvironment

/** 
 * @author Mara
 */
 
agent Environment {
	uses Behaviors, DefaultContextInteractions

	var tspVersion : int
	var simpleBehavior : SimpleTSPEnvironment
	var twBehavior : TWTSPEnvironment

	on Initialize {
		simpleBehavior = new SimpleTSPEnvironment(this)
		twBehavior = new TWTSPEnvironment(this)
		
		tspVersion = 0
		simpleBehavior.registerBehavior
	}

	on TspInputFile {
		var envData = FileParser.loadEnv(occurrence.path.toString)
		if (tspVersion != envData.tspVersionNb) {
			if (envData.tspVersionNb === 0) {
				simpleBehavior.registerBehavior
				twBehavior.unregisterBehavior
			} else if (envData.tspVersionNb === 1) {
				simpleBehavior.registerBehavior
				twBehavior.unregisterBehavior
			} else if (envData.tspVersionNb === 2) {
				simpleBehavior.unregisterBehavior
				twBehavior.registerBehavior
			}
			tspVersion = envData.tspVersionNb
		}
		if (tspVersion === 0 || tspVersion === 1) {
			new NewEnvironment(envData.env, envData.nbNodes).emit[it.UUID === this.ID]
		}else if (tspVersion === 2) {
			new NewTWEnvironment(envData.env, envData.nbNodes, envData.timeWindow, envData.initialTimeStamp).emit[it.UUID === this.ID]
		}
			
	}

	on Destroy {
	}
}
