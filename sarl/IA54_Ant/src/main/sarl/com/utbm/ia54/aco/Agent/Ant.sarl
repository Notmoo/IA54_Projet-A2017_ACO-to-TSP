package com.utbm.ia54.aco.Agent

import io.sarl.core.Initialize
import io.sarl.core.Destroy
import io.sarl.core.DefaultContextInteractions
import io.sarl.core.Lifecycle
import io.sarl.core.Logging
import com.utbm.ia54.aco.AntCreated
import io.sarl.core.Behaviors
import com.utbm.ia54.aco.ClassicTSPWorker
import com.utbm.ia54.aco.TWTSPWorker
import com.utbm.ia54.aco.ApplicationClose
import com.utbm.ia54.aco.java.StringDef
import com.utbm.ia54.aco.AntData

//-----------------------------------------
//		AGENTS
//-----------------------------------------
agent AntAgent{
	uses DefaultContextInteractions, Lifecycle, Logging, Behaviors
	
	var currTspVersionNb : int
	
	on Initialize {
		if (!occurrence.parameters.isEmpty) {
			var numAnt = occurrence.parameters.get(0) as Integer
			loggingName = "Ant_" + numAnt.toString
			
			var pheromoneImportanceFactor = -1 as float
			var distanceImportanceFactor = -1 as float
			
			if(occurrence.parameters.size>3){
				currTspVersionNb = occurrence.parameters.get(1) as Integer
				pheromoneImportanceFactor = occurrence.parameters.get(2) as Float
				distanceImportanceFactor = occurrence.parameters.get(3) as Float
				
			}else{
				currTspVersionNb = 0
				pheromoneImportanceFactor = Float.parseFloat(StringDef.ANT_PHEROMONE_IMPORTANCE_FACTOR_STR.defaulValue)
				distanceImportanceFactor = Float.parseFloat(StringDef.ANT_DISTANCE_IMPORTANCE_FACTOR_STR.defaulValue)
			}
				
			switch (currTspVersionNb){
				case 2: new TWTSPWorker(this).registerBehavior
				default: new ClassicTSPWorker(this).registerBehavior
			}
			
			new AntData(currTspVersionNb, distanceImportanceFactor, pheromoneImportanceFactor).emit[it.UUID === this.ID]
			new AntCreated().emit
		}else{
			killMe
		}
	}
	
	on Destroy {
		
	}
	
	on ApplicationClose {
		killMe
	}
}
