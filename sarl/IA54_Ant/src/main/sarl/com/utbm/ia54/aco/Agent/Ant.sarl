package com.utbm.ia54.aco

import io.sarl.core.Initialize
import io.sarl.core.Destroy
import io.sarl.core.DefaultContextInteractions
import java.util.UUID
import java.util.Random
import io.sarl.core.Logging

//-----------------------------------------
//		AGENTS
//-----------------------------------------
agent AntAgent{
	uses Logging, DefaultContextInteractions, TSPPathFinder
	
	var envUUID : UUID
	
	on Initialize {
		if (!occurrence.parameters.isEmpty) {
			var numAnt = occurrence.parameters.get(0) as Integer
			loggingName = "Ant_" + numAnt.toString
		}
		
		// TODO ajouter un else pour le cas o√π l'init est mal faite
		
		new SimpleTSPPathFinder().setSkill(TSPPathFinder)
		new AntCreated().emit
	}
	
	on Destroy {
		
	}
	
	on IterationStart {
		if(occurrence.idFirstNode!=-1){
			findPath(occurrence.nbNodes, occurrence.env, occurrence.idFirstNode, occurrence.idLastNode).emit[
				it.UUID === envUUID
			]
			new AntFinished().emit[it.UUID === occurrence.source.UUID]
		}else{
			val idFirstNode : short = (new Random().nextInt(occurrence.nbNodes - 1) + 1) as short
			findPath(occurrence.nbNodes, occurrence.env, idFirstNode, occurrence.idLastNode).emit [
				it.UUID === envUUID
			]
			new AntFinished().emit[it.UUID === occurrence.source.UUID]
		}
	}
}