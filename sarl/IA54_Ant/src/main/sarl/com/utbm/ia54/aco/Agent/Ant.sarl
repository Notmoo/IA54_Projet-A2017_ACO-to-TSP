package com.utbm.ia54.aco.Agent

import io.sarl.core.Initialize
import io.sarl.core.Destroy
import io.sarl.core.DefaultContextInteractions
import io.sarl.core.Lifecycle
import io.sarl.core.Logging
import com.utbm.ia54.aco.AntCreated
import com.utbm.ia54.aco.ChangeTspVersion
import io.sarl.core.Behaviors
import com.utbm.ia54.aco.ClassicTSPWorker
import com.utbm.ia54.aco.TWTSPWorker

//-----------------------------------------
//		AGENTS
//-----------------------------------------
agent AntAgent{
	uses DefaultContextInteractions, Lifecycle, Logging, Behaviors
	
	var currTspVersionNb : int
	var ctspw : ClassicTSPWorker
	var twtspw : TWTSPWorker
	
	on Initialize {
		if (!occurrence.parameters.isEmpty) {
			var numAnt = occurrence.parameters.get(0) as Integer
			loggingName = "Ant_" + numAnt.toString
			
			//TODO Ajout param version tsp
			currTspVersionNb = 0
			ctspw = new ClassicTSPWorker(this)
			twtspw = new TWTSPWorker(this)
			ctspw.registerBehavior
		}
		
		// TODO ajouter un else pour le cas o√π l'init est mal faite
		new AntCreated().emit
	}
	
	on Destroy {
		
	}
	
	on ApplicationClose {
		ctspw.unregisterBehavior
		twtspw.unregisterBehavior
		killMe
	}
	
	//XXX
	on ChangeTspVersion {
		if ((occurrence.version_nb === 0 || occurrence.version_nb === 1) && occurrence.version_nb !== currTspVersionNb) {
			ctspw.registerBehavior
			twtspw.unregisterBehavior
			currTspVersionNb = occurrence.version_nb
		}
		if (occurrence.version_nb === 2 && occurrence.version_nb !== currTspVersionNb) {
			ctspw.unregisterBehavior
			twtspw.registerBehavior
			currTspVersionNb = occurrence.version_nb
		}
	}
}
