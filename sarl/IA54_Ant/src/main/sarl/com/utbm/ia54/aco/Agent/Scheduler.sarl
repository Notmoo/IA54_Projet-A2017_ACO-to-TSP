/** 
 * 
 */
package com.utbm.ia54.aco

import io.sarl.core.Initialize
import io.sarl.core.Logging
import io.sarl.core.DefaultContextInteractions
import io.sarl.core.Lifecycle

/** 
 * @author Mara
 */
agent Scheduler {
	uses Logging, DefaultContextInteractions, Lifecycle
	
	var nbAnts : int
	var nbAntsAck : int
	var nbAntsCreated : int

	on Initialize {
		loggingName = "Scheduler"
		
		if (!occurrence.parameters.isEmpty) {
			nbAnts = occurrence.parameters.get(0) as Integer
		}

		nbAntsAck = 0;
		nbAntsCreated = 0;
		
		for (var i = 0; i < nbAnts; i++) {
			spawn(AntAgent, i);
		}
	}
	
	on Updated {
		var env = occurrence.env
		var nbNodes = occurrence.nbNodes

		var newEvent = new IterationStart(nbNodes, env, (-1) as short, (-1) as short)
		emit(newEvent)
	}
	
	on AntCreated {
		nbAntsCreated ++
		if (nbAntsCreated >= nbAnts) {
			nbAntsCreated = 0;
			emit(new RequestUpdate);	
		}
	}
	
	on AntFinished {
		nbAntsAck++
		
		if (nbAntsAck >= nbAnts) {
			nbAntsAck = 0
			emit(new IterationFinished)
		}
	}
}
